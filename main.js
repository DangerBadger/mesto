(()=>{"use strict";var t=document.querySelector(".profile__edit-button"),e=document.querySelector(".profile__add-button"),n=document.querySelector(".profile__avatar-button");function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,a(r.key),r)}}function i(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function u(t,e,n){return(e=a(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t){var e=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,e);if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t,"string");return"symbol"===r(e)?e:String(e)}var c=i((function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),u(this,"_showInputError",(function(t,e){var n=r._formElement.querySelector("#".concat(t.id,"-error"));t.classList.add(r._inputErrorClass),n.textContent=e})),u(this,"_hideInputError",(function(t){var e=r._formElement.querySelector("#".concat(t.id,"-error"));t.classList.remove("".concat(r._inputErrorClass)),e.textContent=""})),u(this,"_checkInputValidity",(function(t){t.validity.valid?r._hideInputError(t):r._showInputError(t,t.validationMessage)})),u(this,"clearErrors",(function(){r._inputList.forEach((function(t){r._hideInputError(t)}))})),u(this,"disableSubmitButton",(function(){r._buttonElement.classList.add(r._inactiveButtonClass),r._buttonElement.disabled=!0})),u(this,"enableValidation",(function(){r._setValidationEventListeners()})),u(this,"_hasInvalidInput",(function(){return r._inputList.some((function(t){return!t.validity.valid}))})),u(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r.disableSubmitButton():(r._buttonElement.classList.remove(r._inactiveButtonClass),r._buttonElement.removeAttribute("disabled"))})),u(this,"_setValidationEventListeners",(function(){r._toggleButtonState(),r._inputList.forEach((function(t){t.addEventListener("input",(function(){r._checkInputValidity(t),r._toggleButtonState()}))}))})),this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}));function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key,"string"),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItemAppEnd",value:function(t){this._container.append(t)}},{key:"addItemPrepEnd",value:function(t){this._container.prepend(t)}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,d(r.key),r)}}function d(t){var e=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t,"string");return"symbol"===p(e)?e:String(e)}var m=function(){function t(e,n,r,o){var i,u,a,c=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),i=this,a=function(){c._card.remove(),c._card=null},(u=d(u="deleteCardLocal"))in i?Object.defineProperty(i,u,{value:a,enumerable:!0,configurable:!0,writable:!0}):i[u]=a,this._data=e.data,this._userId=e.userId,this._ownerId=this._data.owner._id,this._openCard=e.handleOpenImagePopup,this._templateSelector=n,this._handleDeleteConfirm=r,this._handleCardLikeClick=o}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}},{key:"isLiked",value:function(){var t=this;return this._data.likes.find((function(e){return e._id===t._userId}))}},{key:"countLikes",value:function(t){this._data.likes=t,this._cardLikeCounter.textContent=this._data.likes.length,this.isLiked()?this._elementLikeButton.classList.add("elements__like-button_active"):this._elementLikeButton.classList.remove("elements__like-button_active")}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._deleteButton=this._card.querySelector(".elements__delete-btn"),this._elementImg=this._card.querySelector(".elements__img"),this._elementLikeButton=this._card.querySelector(".elements__like-button"),this._cardLikeCounter=this._card.querySelector(".elements__like-counter"),this._setEventListeners(),this._elementImg.src=this._data.link,this._elementImg.alt=this._data.name,this._card.querySelector(".elements__caption").textContent=this._data.name,this.countLikes(this._data.likes),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._card}},{key:"_setEventListeners",value:function(){var t=this;this._elementLikeButton.addEventListener("click",(function(){t._handleCardLikeClick(t._data._id)})),this._deleteButton.addEventListener("click",(function(){t._handleDeleteConfirm(t._data._id)})),this._card.querySelector(".elements__img-button").addEventListener("click",(function(){t._handleImageClick()}))}},{key:"_handleImageClick",value:function(){this._openCard(this._data)}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_(r.key),r)}}function v(t,e,n){return(e=_(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function _(t){var e=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t,"string");return"symbol"===h(e)?e:String(e)}var g=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),v(this,"_handleEscClose",(function(t){"Escape"===t.key&&n.close()})),v(this,"_setKeyHandler",(function(){document.addEventListener("keydown",n._handleEscClose)})),v(this,"_removeKeyHandler",(function(){document.removeEventListener("keydown",n._handleEscClose)})),this._popup=document.querySelector(e)}var e,n;return e=t,(n=[{key:"_bindPopupsOverlayClickHandlers",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target===e.currentTarget&&t.close()}))}},{key:"_bindPopupsCloseButtonsClickHandlers",value:function(){var t=this;this._popup.addEventListener("click",(function(e){e.target.classList.contains("close-btn")&&t.close()}))}},{key:"setEventListeners",value:function(){this._bindPopupsCloseButtonsClickHandlers(),this._bindPopupsOverlayClickHandlers()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),this._setKeyHandler()}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),this._removeKeyHandler()}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function k(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key,"string"),"symbol"===S(o)?o:String(o)),r)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=E(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function E(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}function L(t,e){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},L(t,e)}function j(t,e){if(e&&("object"===S(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&L(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=P(r);if(o){var n=P(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return j(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._imageLink=e._popup.querySelector(".popup__figure-image"),e._imageText=e._popup.querySelector(".popup__figure-caption"),e}return e=u,(n=[{key:"open",value:function(t){var e=t.name,n=t.link;w(P(u.prototype),"open",this).call(this),this._imageLink.src=n,this._imageLink.alt=e,this._imageText.textContent=e}}])&&k(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(g);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key,"string"),"symbol"===C(o)?o:String(o)),r)}var o}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=q(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},T.apply(this,arguments)}function q(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=x(t)););return t}function B(t,e){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},B(t,e)}function A(t,e){if(e&&("object"===C(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function x(t){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},x(t)}var R=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&B(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=x(r);if(o){var n=x(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return A(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleFormSubmit=e,n._inputList=Array.from(n._popup.querySelectorAll(".popup__form-input")),n._submitButton=n._popup.querySelector(".popup__submit-btn"),n._submitButtonText=n._submitButton.textContent,n}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name]}))}},{key:"changeHandleFormSubmit",value:function(t){this._handleFormSubmit=t}},{key:"renderLoading",value:function(t,e){this._submitButton.textContent=t?e:this._submitButtonText}},{key:"setEventListeners",value:function(){var t=this;T(x(u.prototype),"setEventListeners",this).call(this),this._form=this._popup.querySelector(".popup__form"),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())}))}},{key:"close",value:function(){T(x(u.prototype),"close",this).call(this),this._form.reset()}}])&&I(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(g);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==U(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key,"string"),"symbol"===U(o)?o:String(o)),r)}var o}var H=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameInput=document.querySelector(n),this._jobInput=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameInput.textContent,job:this._jobInput.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about,r=t.avatar;this._nameInput.textContent=e,this._jobInput.textContent=n,this._avatar.src=r}}])&&V(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},D(t)}function N(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==D(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e);if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key,"string"),"symbol"===D(o)?o:String(o)),r)}var o}var F=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var e,n;return e=t,(n=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка ".concat(t.status," ").concat(t.statusText))}},{key:"_request",value:function(t,e){return fetch(t,e).then(this._checkResponse)}},{key:"getProfileInfo",value:function(){return this._request("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers})}},{key:"getInitialCards",value:function(){return this._request("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers})}},{key:"editProfile",value:function(t){var e=t.name,n=t.job;return this._request("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:n})})}},{key:"addNewCard",value:function(t){var e=t.name,n=t.link;return this._request("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:n})})}},{key:"deleteCardOnline",value:function(t){return this._request("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers})}},{key:"addLike",value:function(t){return this._request("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers})}},{key:"deleteLike",value:function(t){return this._request("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers})}},{key:"changeAvatar",value:function(t){var e=t.link;return this._request("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}])&&N(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function K(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var J,G=new H({nameSelector:".profile__name",jobSelector:".profile__job",avatarSelector:".profile__avatar"}),M=void 0,z={};J={formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_inactive",inputErrorClass:"popup__form-input_type_error"},Array.from(document.querySelectorAll(J.formSelector)).forEach((function(t){var e=new c(t,J),n=t.getAttribute("name");z[n]=e,e.enableValidation()}));var $=new F({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"36b86947-e3e3-40c9-9f59-59007cbe88e7","Content-Type":"application/json"}});Promise.all([$.getInitialCards(),$.getProfileInfo()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,n)||function(t,e){if(t){if("string"==typeof t)return K(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];M=i._id,G.setUserInfo(i),X.renderItems(o)})).catch((function(t){console.log(t)}));var Q=function(t){Y.open(t)},W=function(t,e){var n=new m(t,e,(function(t){Z.open(),Z.changeHandleFormSubmit((function(){Z.renderLoading(!0,"Удаление..."),$.deleteCardOnline(t).then((function(){n.deleteCardLocal(),Z.close()})).catch((function(t){console.log(t)})).finally((function(){Z.renderLoading(!1)}))}))}),(function(t){n.isLiked()?$.deleteLike(t).then((function(t){n.countLikes(t.likes)})).catch((function(t){console.log(t)})):$.addLike(t).then((function(t){n.countLikes(t.likes)})).catch((function(t){console.log(t)}))}));return n.generateCard()},X=new f({items:[],renderer:function(t){var e=W({data:t,userId:M,handleOpenImagePopup:Q},".template");X.addItemAppEnd(e)}},".elements__list"),Y=new O("#popupImage"),Z=new R("#popupDeleteConfirm"),tt=new R("#popupAvatar",(function(t){tt.renderLoading(!0,"Сохранение..."),$.changeAvatar(t).then((function(t){G.setUserInfo(t),tt.close()})).catch((function(t){console.log(t)})).finally((function(){tt.renderLoading(!1)}))})),et=new R("#popupCard",(function(t){et.renderLoading(!0,"Создание..."),$.addNewCard(t).then((function(t){var e=W({data:t,userId:M,handleOpenImagePopup:Q},".template");X.addItemPrepEnd(e),et.close()})).catch((function(t){console.log(t)})).finally((function(){et.renderLoading(!1)}))})),nt=new R("#popupProfile",(function(t){nt.renderLoading(!0,"Сохранение..."),$.editProfile(t).then((function(t){G.setUserInfo(t),nt.close()})).catch((function(t){console.log(t)})).finally((function(){nt.renderLoading(!1)}))}));e.addEventListener("click",(function(){z.card.clearErrors(),z.card.disableSubmitButton(),et.open()})),t.addEventListener("click",(function(){z.profile.clearErrors(),z.profile.disableSubmitButton();var t=G.getUserInfo();nt.setInputValues(t),nt.open()})),n.addEventListener("click",(function(){z.avatar.clearErrors(),z.avatar.disableSubmitButton(),tt.open()})),Y.setEventListeners(),nt.setEventListeners(),et.setEventListeners(),Z.setEventListeners(),tt.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQU8sSUFBTUEsRUFBeUJDLFNBQVNDLGNBQWMseUJBR2hEQyxFQUFzQkYsU0FBU0MsY0FBYyx3QkFLN0NFLEVBQXdCSCxTQUFTQyxjQUFjLDJCLGk2QkNSdkNHLEVBQWEsR0FDaEMsV0FBWUMsRUFBYUMsR0FBa0IsWSw0RkFBQSxtQ0FXekIsU0FBQ0MsRUFBV0MsR0FDNUIsSUFBTUMsRUFBZSxFQUFLQyxhQUFhVCxjQUFjLElBQUQsT0FBS00sRUFBVUksR0FBRSxXQUNyRUosRUFBVUssVUFBVUMsSUFBSSxFQUFLQyxrQkFDN0JMLEVBQWFNLFlBQWNQLENBQzdCLElBQUMsMEJBR2lCLFNBQUNELEdBQ2pCLElBQU1FLEVBQWUsRUFBS0MsYUFBYVQsY0FBYyxJQUFELE9BQUtNLEVBQVVJLEdBQUUsV0FDckVKLEVBQVVLLFVBQVVJLE9BQU8sR0FBRCxPQUFJLEVBQUtGLG1CQUNuQ0wsRUFBYU0sWUFBYyxFQUM3QixJQUFDLDhCQUdxQixTQUFDUixHQUNoQkEsRUFBVVUsU0FBU0MsTUFHdEIsRUFBS0MsZ0JBQWdCWixHQUZyQixFQUFLYSxnQkFBZ0JiLEVBQVdBLEVBQVVjLGtCQUk5QyxJQUFDLHNCQUdjLFdBQ2IsRUFBS0MsV0FBV0MsU0FBUSxTQUFDaEIsR0FDdkIsRUFBS1ksZ0JBQWdCWixFQUN2QixHQUNGLElBQUMsOEJBR3FCLFdBQ3BCLEVBQUtpQixlQUFlWixVQUFVQyxJQUFJLEVBQUtZLHNCQUN2QyxFQUFLRCxlQUFlRSxVQUFXLENBQ2pDLElBQUMsMkJBR2tCLFdBQ2pCLEVBQUtDLDhCQUNQLElBQUMsMkJBRWtCLFdBQ2pCLE9BQU8sRUFBS0wsV0FBV00sTUFBSyxTQUFDckIsR0FDM0IsT0FBUUEsRUFBVVUsU0FBU0MsS0FDN0IsR0FDRixJQUFDLDZCQUdvQixXQUNmLEVBQUtXLG1CQUNQLEVBQUtDLHVCQUVMLEVBQUtOLGVBQWVaLFVBQVVJLE9BQU8sRUFBS1Msc0JBQzFDLEVBQUtELGVBQWVPLGdCQUFnQixZQUV4QyxJQUFDLHVDQUc4QixXQUM3QixFQUFLQyxxQkFFTCxFQUFLVixXQUFXQyxTQUFRLFNBQUNoQixHQUN2QkEsRUFBVTBCLGlCQUFpQixTQUFTLFdBQ2xDLEVBQUtDLG9CQUFvQjNCLEdBQ3pCLEVBQUt5QixvQkFDUCxHQUNGLEdBQ0YsSUE1RUVHLEtBQUtDLGVBQWlCOUIsRUFBaUIrQixjQUN2Q0YsS0FBS0csc0JBQXdCaEMsRUFBaUJpQyxxQkFDOUNKLEtBQUtWLHFCQUF1Qm5CLEVBQWlCa0Msb0JBQzdDTCxLQUFLckIsaUJBQW1CUixFQUFpQm1DLGdCQUN6Q04sS0FBS3pCLGFBQWVMLEVBQ3BCOEIsS0FBS2IsV0FBYW9CLE1BQU1DLEtBQUtSLEtBQUt6QixhQUFha0MsaUJBQWlCVCxLQUFLQyxpQkFDckVELEtBQUtYLGVBQWlCVyxLQUFLekIsYUFBYVQsY0FBY2tDLEtBQUtHLHNCQUM3RCxJLHlxQkNUbUJPLEVBQU8sV0FDMUIsYUFBaUNDLEdBQW1CLElBQXRDQyxFQUFLLEVBQUxBLE1BQU9DLEVBQVEsRUFBUkEsVSw0RkFBUSxTQUMzQmIsS0FBS2MsY0FBZ0JGLEVBQ3JCWixLQUFLZSxVQUFZRixFQUNqQmIsS0FBS2dCLFdBQWFuRCxTQUFTQyxjQUFjNkMsRUFDM0MsQyxRQWNDLE8sRUFkQSxHLEVBQUEsMEJBRUQsU0FBWUMsR0FBTyxXQUNqQkEsRUFBTXhCLFNBQVEsU0FBQzZCLEdBQ2IsRUFBS0YsVUFBVUUsRUFDakIsR0FDRixHQUFDLDJCQUVELFNBQWNDLEdBQ1psQixLQUFLZ0IsV0FBV0csT0FBT0QsRUFDekIsR0FBQyw0QkFFRCxTQUFlQSxHQUNibEIsS0FBS2dCLFdBQVdJLFFBQVFGLEVBQzFCLE0sb0VBQUMsRUFuQnlCLEcsd3JCQ0FQRyxFQUFJLFdBQ3ZCLFdBQVlDLEVBQVVDLEVBQWtCQyxFQUFxQkMsR0FBcUIsSSxNQUFBLFEsNEZBQUEsUyxFQUFBLEssRUFrQ2hFLFdBQ2hCLEVBQUtDLE1BQU03QyxTQUNYLEVBQUs2QyxNQUFRLElBQ2YsRyxNQXJDa0Ysc0Isd0ZBQ2hGMUIsS0FBSzJCLE1BQVFMLEVBQVNNLEtBQ3RCNUIsS0FBSzZCLFFBQVVQLEVBQVNRLE9BQ3hCOUIsS0FBSytCLFNBQVcvQixLQUFLMkIsTUFBTUssTUFBTUMsSUFDakNqQyxLQUFLa0MsVUFBWVosRUFBU2EscUJBQzFCbkMsS0FBS29DLGtCQUFvQmIsRUFDekJ2QixLQUFLcUMscUJBQXVCYixFQUM1QnhCLEtBQUtzQyxxQkFBdUJiLENBQzlCLEMsUUFvRUMsTyxFQXBFQSxHLEVBQUEsMkJBRUQsV0FDRSxPQUFPNUQsU0FDSkMsY0FBY2tDLEtBQUtvQyxtQkFDbkJHLFFBQVF6RSxjQUFjLG1CQUN0QjBFLFdBQVUsRUFDZixHQUFDLHFCQUVELFdBQVUsV0FHUixPQUZzQnhDLEtBQUsyQixNQUFNYyxNQUFNQyxNQUFLLFNBQUFDLEdBQUksT0FBSUEsRUFBS1YsTUFBUSxFQUFLSixPQUFPLEdBRy9FLEdBQUMsd0JBRUQsU0FBV2UsR0FDVDVDLEtBQUsyQixNQUFNYyxNQUFRRyxFQUNuQjVDLEtBQUs2QyxpQkFBaUJqRSxZQUFjb0IsS0FBSzJCLE1BQU1jLE1BQU1LLE9BRWxEOUMsS0FBSytDLFVBQ04vQyxLQUFLZ0QsbUJBQW1CdkUsVUFBVUMsSUFBSSxnQ0FFdENzQixLQUFLZ0QsbUJBQW1CdkUsVUFBVUksT0FBTywrQkFFN0MsR0FBQywwQkFPRCxXQWtCRSxPQWpCQW1CLEtBQUswQixNQUFRMUIsS0FBS2lELGVBQ2xCakQsS0FBS2tELGNBQWdCbEQsS0FBSzBCLE1BQU01RCxjQUFjLHlCQUM5Q2tDLEtBQUttRCxZQUFjbkQsS0FBSzBCLE1BQU01RCxjQUFjLGtCQUM1Q2tDLEtBQUtnRCxtQkFBcUJoRCxLQUFLMEIsTUFBTTVELGNBQWMsMEJBQ25Ea0MsS0FBSzZDLGlCQUFtQjdDLEtBQUswQixNQUFNNUQsY0FBYywyQkFDakRrQyxLQUFLb0QscUJBRUxwRCxLQUFLbUQsWUFBWUUsSUFBTXJELEtBQUsyQixNQUFNMkIsS0FDbEN0RCxLQUFLbUQsWUFBWUksSUFBTXZELEtBQUsyQixNQUFNNkIsS0FDbEN4RCxLQUFLMEIsTUFBTTVELGNBQWMsc0JBQXNCYyxZQUFjb0IsS0FBSzJCLE1BQU02QixLQUV4RXhELEtBQUt5RCxXQUFXekQsS0FBSzJCLE1BQU1jLE9BRXhCekMsS0FBSytCLFdBQWEvQixLQUFLNkIsVUFDeEI3QixLQUFLa0QsY0FBY1EsTUFBTUMsUUFBVSxRQUc5QjNELEtBQUswQixLQUNkLEdBQUMsZ0NBRUQsV0FBcUIsV0FDbkIxQixLQUFLZ0QsbUJBQW1CbEQsaUJBQWlCLFNBQVMsV0FDaEQsRUFBS3dDLHFCQUFxQixFQUFLWCxNQUFNTSxJQUN2QyxJQUNBakMsS0FBS2tELGNBQWNwRCxpQkFBaUIsU0FBUyxXQUMzQyxFQUFLdUMscUJBQXFCLEVBQUtWLE1BQU1NLElBQ3ZDLElBRUFqQyxLQUFLMEIsTUFBTTVELGNBQWMseUJBQXlCZ0MsaUJBQWlCLFNBQVMsV0FDMUUsRUFBSzhELG1CQUNQLEdBRUYsR0FBQywrQkFFRCxXQUNFNUQsS0FBS2tDLFVBQVVsQyxLQUFLMkIsTUFDdEIsTSxvRUFBQyxFQTdFc0IsRyxxekJDQUprQyxFQUFLLFdBQ3hCLFdBQVlDLEdBQWUsWSw0RkFBQSxtQ0FLVCxTQUFDQyxHQUNELFdBQVpBLEVBQUlDLEtBQ04sRUFBS0MsT0FFVCxJQUFDLHlCQUdnQixXQUNmcEcsU0FBU2lDLGlCQUFpQixVQUFXLEVBQUtvRSxnQkFDNUMsSUFBQyw0QkFHbUIsV0FDbEJyRyxTQUFTc0csb0JBQW9CLFVBQVcsRUFBS0QsZ0JBQy9DLElBbEJFbEUsS0FBS29FLE9BQVN2RyxTQUFTQyxjQUFjZ0csRUFDdkMsQyxRQWtEQyxPLEVBaERELEcsRUFBQSw4Q0FrQkEsV0FBa0MsV0FDaEM5RCxLQUFLb0UsT0FBT3RFLGlCQUFpQixhQUFhLFNBQUNpRSxHQUNyQ0EsRUFBSU0sU0FBV04sRUFBSU8sZUFDckIsRUFBS0wsT0FFVCxHQUNGLEdBQUMsa0RBR0QsV0FBdUMsV0FDckNqRSxLQUFLb0UsT0FBT3RFLGlCQUFpQixTQUFTLFNBQUNpRSxHQUNqQ0EsRUFBSU0sT0FBTzVGLFVBQVU4RixTQUFTLGNBQ2hDLEVBQUtOLE9BRVQsR0FDRixHQUFDLCtCQUVELFdBQ0VqRSxLQUFLd0UsdUNBQ0x4RSxLQUFLeUUsaUNBQ1AsR0FBQyxrQkFFRCxXQUNFekUsS0FBS29FLE9BQU8zRixVQUFVQyxJQUFJLGdCQUMxQnNCLEtBQUswRSxnQkFDUCxHQUFDLG1CQUVELFdBQ0UxRSxLQUFLb0UsT0FBTzNGLFVBQVVJLE9BQU8sZ0JBQzdCbUIsS0FBSzJFLG1CQUNQLE0sb0VBQUMsRUFyRHVCLEcsOGhEQ0FLLElBRVZDLEVBQWMsYSxxUkFBQSxVLFFBQUEsRyxFQUFBLEUsK1lBQ2pDLFdBQVlkLEdBQWUsTUFHNkMsTyw0RkFIN0MsVUFDekIsY0FBTUEsSUFDRGUsV0FBYSxFQUFLVCxPQUFPdEcsY0FBYyx3QkFDNUMsRUFBS2dILFdBQWEsRUFBS1YsT0FBT3RHLGNBQWMsMEJBQTBCLENBRXhFLENBUUMsTyxFQVJBLEcsRUFBQSxtQkFHRCxZQUFtQixJQUFiMEYsRUFBSSxFQUFKQSxLQUFNRixFQUFJLEVBQUpBLEtBQ1YseUNBQ0F0RCxLQUFLNkUsV0FBV3hCLElBQU1DLEVBQ3RCdEQsS0FBSzZFLFdBQVd0QixJQUFNQyxFQUN0QnhELEtBQUs4RSxXQUFXbEcsWUFBYzRFLENBQ2hDLE0sb0VBQUMsRUFkZ0MsQ0FBU0ssRyw4aERDRmIsSUFFVmtCLEVBQWEsYSxxUkFBQSxVLFFBQUEsRyxFQUFBLEUsK1lBQ2hDLFdBQVlqQixFQUFla0IsR0FBa0IsTUFLYSxPLDRGQUxiLFVBQzNDLGNBQU1sQixJQUNEbUIsa0JBQW9CRCxFQUN6QixFQUFLN0YsV0FBYW9CLE1BQU1DLEtBQUssRUFBSzRELE9BQU8zRCxpQkFBaUIsdUJBQzFELEVBQUt5RSxjQUFnQixFQUFLZCxPQUFPdEcsY0FBYyxzQkFDL0MsRUFBS3FILGtCQUFvQixFQUFLRCxjQUFjdEcsWUFBWSxDQUMxRCxDQTZDQyxPLEVBN0NBLEcsRUFBQSw4QkFFRCxXQUFrQixXQU9oQixPQU5Bb0IsS0FBS29GLFlBQWMsQ0FBQyxFQUVwQnBGLEtBQUtiLFdBQVdDLFNBQVEsU0FBQWlHLEdBQ3RCLEVBQUtELFlBQVlDLEVBQU03QixNQUFRNkIsRUFBTUMsS0FDdkMsSUFFT3RGLEtBQUtvRixXQUNkLEdBQUMsNEJBRUQsU0FBZXhELEdBQ2I1QixLQUFLYixXQUFXQyxTQUFRLFNBQUNpRyxHQUN2QkEsRUFBTUMsTUFBUTFELEVBQUt5RCxFQUFNN0IsS0FDM0IsR0FDRixHQUFDLG9DQUdELFNBQXVCK0IsR0FDckJ2RixLQUFLaUYsa0JBQW9CTSxDQUMzQixHQUFDLDJCQUVELFNBQWNDLEVBQVdDLEdBRXJCekYsS0FBS2tGLGNBQWN0RyxZQURsQjRHLEVBQ2dDQyxFQUVBekYsS0FBS21GLGlCQUUxQyxHQUFDLCtCQUVELFdBQW9CLFdBQ2xCLHNEQUVBbkYsS0FBSzBGLE1BQVExRixLQUFLb0UsT0FBT3RHLGNBQWMsZ0JBRXZDa0MsS0FBSzBGLE1BQU01RixpQkFBaUIsVUFBVSxTQUFDaUUsR0FDckNBLEVBQUk0QixpQkFDSixFQUFLVixrQkFBa0IsRUFBS1csa0JBQzlCLEdBQ0YsR0FBQyxtQkFFRCxXQUNFLDBDQUNBNUYsS0FBSzBGLE1BQU1HLE9BQ2IsTSxvRUFBQyxFQXBEK0IsQ0FBU2hDLEcseXFCQ0Z0QmlDLEVBQVEsV0FDM0IsY0FBeUQsSUFBNUNDLEVBQVksRUFBWkEsYUFBY0MsRUFBVyxFQUFYQSxZQUFhQyxFQUFjLEVBQWRBLGdCLDRGQUFjLFNBQ3BEakcsS0FBS2tHLFdBQWFySSxTQUFTQyxjQUFjaUksR0FDekMvRixLQUFLbUcsVUFBWXRJLFNBQVNDLGNBQWNrSSxHQUN4Q2hHLEtBQUtvRyxRQUFVdkksU0FBU0MsY0FBY21JLEVBQ3hDLEMsUUFhQyxPLEVBYkEsRyxFQUFBLDBCQUVELFdBR0UsTUFBTyxDQUFDekMsS0FGS3hELEtBQUtrRyxXQUFXdEgsWUFFZnlILElBREZyRyxLQUFLbUcsVUFBVXZILFlBRTdCLEdBQUMseUJBR0QsWUFBb0MsSUFBdEI0RSxFQUFJLEVBQUpBLEtBQU04QyxFQUFLLEVBQUxBLE1BQU9DLEVBQU0sRUFBTkEsT0FDekJ2RyxLQUFLa0csV0FBV3RILFlBQWM0RSxFQUM5QnhELEtBQUttRyxVQUFVdkgsWUFBYzBILEVBQzdCdEcsS0FBS29HLFFBQVEvQyxJQUFNa0QsQ0FDckIsTSxvRUFBQyxFQWxCMEIsRyx5cUJDQVJDLEVBQUcsV0FDdEIsY0FBZ0MsSUFBbkJDLEVBQU8sRUFBUEEsUUFBU0MsRUFBTyxFQUFQQSxTLDRGQUFPLFNBQzNCMUcsS0FBSzJHLFNBQVdGLEVBQ2hCekcsS0FBSzRHLFNBQVdGLENBQ2xCLEMsUUE2RkMsTyxFQTdGQSxHLEVBQUEsNkJBRUQsU0FBZUcsR0FDYixPQUFPQSxFQUFJQyxHQUFLRCxFQUFJRSxPQUFTQyxRQUFRQyxPQUFPLFVBQUQsT0FBV0osRUFBSUssT0FBTSxZQUFJTCxFQUFJTSxZQUMxRSxHQUFDLHNCQUdELFNBQVNDLEVBQUtDLEdBQ1osT0FBT0MsTUFBTUYsRUFBS0MsR0FBU0UsS0FBS3ZILEtBQUt3SCxlQUN2QyxHQUFDLDRCQUVELFdBQ0UsT0FBT3hILEtBQUt5SCxTQUFTLEdBQUQsT0FDZnpILEtBQUsyRyxTQUFRLGFBQ2hCLENBQ0VlLE9BQVEsTUFDUmhCLFFBQVMxRyxLQUFLNEcsVUFFcEIsR0FBQyw2QkFHRCxXQUNFLE9BQU81RyxLQUFLeUgsU0FBUyxHQUFELE9BQ2Z6SCxLQUFLMkcsU0FBUSxVQUNoQixDQUNFZSxPQUFRLE1BQ1JoQixRQUFTMUcsS0FBSzRHLFVBRXBCLEdBQUMseUJBRUQsWUFBeUIsSUFBWnBELEVBQUksRUFBSkEsS0FBTTZDLEVBQUcsRUFBSEEsSUFDakIsT0FBT3JHLEtBQUt5SCxTQUFTLEdBQUQsT0FDZnpILEtBQUsyRyxTQUFRLGFBQ2hCLENBQ0VlLE9BQVEsUUFDUmhCLFFBQVMxRyxLQUFLNEcsU0FDZGUsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQnJFLEtBQUFBLEVBQ0E4QyxNQUFPRCxLQUdmLEdBQUMsd0JBRUQsWUFBeUIsSUFBYjdDLEVBQUksRUFBSkEsS0FBTUYsRUFBSSxFQUFKQSxLQUNoQixPQUFPdEQsS0FBS3lILFNBQVMsR0FBRCxPQUNmekgsS0FBSzJHLFNBQVEsVUFDaEIsQ0FDRWUsT0FBUSxPQUNSaEIsUUFBUzFHLEtBQUs0RyxTQUNkZSxLQUFNQyxLQUFLQyxVQUFVLENBQ25CckUsS0FBQUEsRUFDQUYsS0FBQUEsS0FHUixHQUFDLDhCQUVELFNBQWlCd0UsR0FDZixPQUFPOUgsS0FBS3lILFNBQVMsR0FBRCxPQUNmekgsS0FBSzJHLFNBQVEsa0JBQVVtQixHQUMxQixDQUNFSixPQUFRLFNBQ1JoQixRQUFTMUcsS0FBSzRHLFVBRXBCLEdBQUMscUJBRUQsU0FBUWtCLEdBQ04sT0FBTzlILEtBQUt5SCxTQUFTLEdBQUQsT0FDZnpILEtBQUsyRyxTQUFRLGtCQUFVbUIsRUFBTSxVQUNoQyxDQUNFSixPQUFRLE1BQ1JoQixRQUFTMUcsS0FBSzRHLFVBRXBCLEdBQUMsd0JBRUQsU0FBV2tCLEdBQ1QsT0FBTzlILEtBQUt5SCxTQUFTLEdBQUQsT0FDZnpILEtBQUsyRyxTQUFRLGtCQUFVbUIsRUFBTSxVQUNoQyxDQUNFSixPQUFRLFNBQ1JoQixRQUFTMUcsS0FBSzRHLFVBRXBCLEdBQUMsMEJBRUQsWUFBcUIsSUFBUHRELEVBQUksRUFBSkEsS0FDWixPQUFPdEQsS0FBS3lILFNBQVMsR0FBRCxPQUNmekgsS0FBSzJHLFNBQVEsb0JBQ2hCLENBQ0VlLE9BQVEsUUFDUmhCLFFBQVMxRyxLQUFLNEcsU0FDZGUsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQnRCLE9BQVFqRCxLQUdoQixNLG9FQUFDLEVBakdxQixHLDBHQ3NCeEIsSUFVMEJ5RSxFQVZwQkMsRUFBVyxJQUFJbEMsRUFBUyxDQUM1QkMsYVRuQmlDLGlCU29CakNDLFlUbkJnQyxnQlNvQmhDQyxlVG5CbUMscUJTc0JqQ25FLE9BQVNtRyxFQUVQQyxFQUFpQixDQUFDLEVBRUVILEVUdkJNLENBQzlCSSxhQUFjLGVBQ2RqSSxjQUFlLHFCQUNmRSxxQkFBc0IscUJBQ3RCQyxvQkFBcUIsNkJBQ3JCQyxnQkFBaUIsZ0NTbUJBQyxNQUFNQyxLQUFLM0MsU0FBUzRDLGlCQUFpQnNILEVBQU9JLGVBQ3BEL0ksU0FBUSxTQUFDbEIsR0FDaEIsSUFBTWtLLEVBQVksSUFBSW5LLEVBQWNDLEVBQWE2SixHQUMzQ00sRUFBV25LLEVBQVlvSyxhQUFhLFFBRTFDSixFQUFlRyxHQUFZRCxFQUM1QkEsRUFBVUcsa0JBQ1gsSUFLRixJQUFNQyxFQUFNLElBQUloQyxFQUFJLENBQ2xCQyxRQUFTLDhDQUNUQyxRQUFTLENBQ1ArQixjQUFlLHVDQUNmLGVBQWdCLHNCQUlsQnpCLFFBQVEwQixJQUFJLENBQUNGLEVBQUlHLGtCQUFtQkgsRUFBSUksbUJBQ3JDckIsTUFBSyxZQUE0QixJLElBQUEsRyxFQUFBLEUsNENBQUEsSSxvMkJBQTFCc0IsRUFBVSxLQUFFQyxFQUFRLEtBQzFCaEgsRUFBU2dILEVBQVM3RyxJQUNsQitGLEVBQVNlLFlBQVlELEdBRXJCRSxFQUFnQkMsWUFBWUosRUFDOUIsSUFDQ0ssT0FBTSxTQUFBQyxHQUNMQyxRQUFRQyxJQUFJRixFQUNkLElBRUosSUFBTUcsRUFBa0IsU0FBQ0MsR0FDdkJDLEVBQVNDLEtBQUtGLEVBQ2hCLEVBRU1HLEVBQWEsU0FBQ0MsRUFBVUMsR0FDNUIsSUFBTUMsRUFBTyxJQUFJeEksRUFDZnNJLEVBQ0FDLEdBQ0EsU0FBQzlCLEdBQ0NnQyxFQUFhTCxPQUNiSyxFQUFhQyx3QkFBdUIsV0FDbENELEVBQWFFLGVBQWMsRUFBTSxlQUNqQ3hCLEVBQUl5QixpQkFBaUJuQyxHQUNsQlAsTUFBSyxXQUNKc0MsRUFBS0ssa0JBQ0xKLEVBQWE3RixPQUNmLElBQ0NpRixPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsSUFDQ2dCLFNBQVEsV0FDUEwsRUFBYUUsZUFBYyxFQUM3QixHQUNKLEdBQ0YsSUFDQSxTQUFDbEMsR0FDSytCLEVBQUs5RyxVQUNQeUYsRUFBSTRCLFdBQVd0QyxHQUNaUCxNQUFLLFNBQUNWLEdBQ0xnRCxFQUFLcEcsV0FBV29ELEVBQUlwRSxNQUN0QixJQUNDeUcsT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixFQUNkLElBRUZYLEVBQUk2QixRQUFRdkMsR0FDVFAsTUFBSyxTQUFDVixHQUNMZ0QsRUFBS3BHLFdBQVdvRCxFQUFJcEUsTUFDdEIsSUFDQ3lHLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDZCxHQUVOLElBRUYsT0FBT1UsRUFBS1MsY0FDZCxFQUVNdEIsRUFBa0IsSUFBSXRJLEVBQVEsQ0FDbENFLE1BQU8sR0FDUEMsU0FBVSxTQUFDZSxHQUNULElBQU1pSSxFQUFPSCxFQUNYLENBQ0U5SCxLQUFBQSxFQUNBRSxPQUFBQSxFQUNBSyxxQkFBc0JtSCxHQUV4QixhQUNGTixFQUFnQnVCLGNBQWNWLEVBQ2hDLEdUcEg0QixtQlN5SHhCTCxFQUFXLElBQUk1RSxFQUFlLGVBRTlCa0YsRUFBZSxJQUFJL0UsRUFBYyx1QkFFakN5RixHQUFjLElBQUl6RixFQUN0QixnQkFFQSxTQUEwQjBGLEdBQ3hCRCxHQUFZUixlQUFjLEVBQU0saUJBQ2hDeEIsRUFBSWtDLGFBQWFELEdBQ2RsRCxNQUFLLFNBQUNoQixHQUNMeUIsRUFBU2UsWUFBWXhDLEdBQ3JCaUUsR0FBWXZHLE9BQ2QsSUFDQ2lGLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDZCxJQUNDZ0IsU0FBUSxXQUNQSyxHQUFZUixlQUFjLEVBQzVCLEdBQ0osSUFHSVcsR0FBWSxJQUFJNUYsRVR0SlcsY1N5Si9CLFNBQTBCMEYsR0FDeEJFLEdBQVVYLGVBQWMsRUFBTSxlQUM5QnhCLEVBQUlvQyxXQUFXSCxHQUNabEQsTUFBSyxTQUFDM0YsR0FDTCxJQUFNaUksRUFBT0gsRUFDWCxDQUNFOUgsS0FBQUEsRUFDQUUsT0FBQUEsRUFDQUsscUJBQXNCbUgsR0FFeEIsYUFDRk4sRUFBZ0I2QixlQUFlaEIsR0FDL0JjLEdBQVUxRyxPQUNaLElBQ0NpRixPQUFNLFNBQUNDLEdBQ05DLFFBQVFDLElBQUlGLEVBQ2QsSUFDQ2dCLFNBQVEsV0FDUFEsR0FBVVgsZUFBYyxFQUMxQixHQUNKLElBR0ljLEdBQVksSUFBSS9GLEVUL0tjLGlCU2tMbEMsU0FBMEIwRixHQUN4QkssR0FBVWQsZUFBYyxFQUFNLGlCQUM5QnhCLEVBQUl1QyxZQUFZTixHQUNibEQsTUFBSyxTQUFDeUQsR0FDTGhELEVBQVNlLFlBQVlpQyxHQUNyQkYsR0FBVTdHLE9BQ1osSUFDQ2lGLE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDZCxJQUNDZ0IsU0FBUSxXQUNQVyxHQUFVZCxlQUFjLEVBQzFCLEdBQ0osSUF5QkZqTSxFQUFvQitCLGlCQUFpQixTQWJmLFdBQ3BCb0ksRUFBcUIsS0FBRStDLGNBQ3ZCL0MsRUFBcUIsS0FBRXZJLHNCQUN2QmdMLEdBQVVsQixNQUNaLElBWUE3TCxFQUF1QmtDLGlCQUFpQixTQXhCZixXQUN2Qm9JLEVBQXdCLFFBQUUrQyxjQUMxQi9DLEVBQXdCLFFBQUV2SSxzQkFDMUIsSUFBTXVMLEVBQWNsRCxFQUFTbUQsY0FDN0JMLEdBQVVNLGVBQWVGLEdBQ3pCSixHQUFVckIsTUFDWixJQXFCQXpMLEVBQXNCOEIsaUJBQWlCLFNBYmYsV0FDdEJvSSxFQUF1QixPQUFFK0MsY0FDekIvQyxFQUF1QixPQUFFdkksc0JBQ3pCNkssR0FBWWYsTUFDZCxJQVdBRCxFQUFTNkIsb0JBQ1RQLEdBQVVPLG9CQUNWVixHQUFVVSxvQkFDVnZCLEVBQWF1QixvQkFDYmIsR0FBWWEsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwcm9maWxlUG9wdXBPcGVuQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cENhcmRTZWxlY3RvciA9ICcjcG9wdXBDYXJkJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwUHJvZmlsZVNlbGVjdG9yID0gJyNwb3B1cFByb2ZpbGUnO1xyXG5leHBvcnQgY29uc3QgY2FyZFBvcHVwT3BlbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hZGQtYnV0dG9uJylcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lU2VsZWN0b3IgPSAnLnByb2ZpbGVfX25hbWUnO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUpvYlNlbGVjdG9yID0gJy5wcm9maWxlX19qb2InO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhclNlbGVjdG9yID0gJy5wcm9maWxlX19hdmF0YXInO1xyXG5leHBvcnQgY29uc3QgY2FyZHNDb250YWluZXIgPSAnLmVsZW1lbnRzX19saXN0JztcclxuZXhwb3J0IGNvbnN0IGF2YXRhclBvcHVwT3BlbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXItYnV0dG9uJylcclxuZXhwb3J0IGNvbnN0IHZhbGlkYXRpb25Db25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiAnLnBvcHVwX19mb3JtJyxcclxuICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19mb3JtLWlucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc3VibWl0LWJ0bicsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zdWJtaXQtYnRuX2luYWN0aXZlJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9fZm9ybS1pbnB1dF90eXBlX2Vycm9yJyxcclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZykge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHZhbGlkYXRpb25Db25maWcuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gdmFsaWRhdGlvbkNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSB2YWxpZGF0aW9uQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSB2YWxpZGF0aW9uQ29uZmlnLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgLy8g0KTRg9C90LrRhtC40Y8g0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQu9Cw0YHRgdCwINGBINC+0YjQuNCx0LrQvtC5XHJcbiAgX3Nob3dJbnB1dEVycm9yID0gKGZvcm1JbnB1dCwgZXJyb3JNZXNzYWdlKSA9PiB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtmb3JtSW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICBmb3JtSW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gIH07XHJcblxyXG4gIC8vINCk0YPQvdC60YbQuNGPINGD0LTQsNC70LXQvdC40Y8g0LrQu9Cw0YHRgdCwINGBINC+0YjQuNCx0LrQvtC5XHJcbiAgX2hpZGVJbnB1dEVycm9yID0gKGZvcm1JbnB1dCkgPT4ge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7Zm9ybUlucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgZm9ybUlucHV0LmNsYXNzTGlzdC5yZW1vdmUoYCR7dGhpcy5faW5wdXRFcnJvckNsYXNzfWApO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgfTtcclxuXHJcbiAgLy8g0KTRg9C90LrRhtC40Y8g0L/RgNC+0LLQtdGA0LrQuCDQstCw0LvQuNC00L3QvtGB0YLQuCDQv9C+0LvRj1xyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoZm9ybUlucHV0KSA9PiB7XHJcbiAgICBpZiAoIWZvcm1JbnB1dC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihmb3JtSW5wdXQsIGZvcm1JbnB1dC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihmb3JtSW5wdXQpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gICAvLyDQntGH0LjRidCw0LXQvCDQvtGI0LjQsdC60LhcclxuICAgY2xlYXJFcnJvcnMgPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoZm9ybUlucHV0KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGZvcm1JbnB1dCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vINCU0LXQu9Cw0LXQvCDQutC90L7Qv9C60Lgg0L3QtdCw0LrRgtC40LLQvdGL0LzQuCDQv9GA0Lgg0L7RgtC60YDRi9GC0LjQuCBwb3B1cCBcclxuICBkaXNhYmxlU3VibWl0QnV0dG9uID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfTtcclxuXHJcbiAgLy8g0JLRi9C30L7QsiDRhNGD0L3QutGG0LjQuCBpc1ZhbGlkINC90LAg0LrQsNC20LTRi9C5INCy0LLQvtC0INGB0LjQvNCy0L7Qu9CwXHJcbiAgZW5hYmxlVmFsaWRhdGlvbiA9ICgpID0+IHtcclxuICAgIHRoaXMuX3NldFZhbGlkYXRpb25FdmVudExpc3RlbmVycygpO1xyXG4gIH07XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGZvcm1JbnB1dCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWZvcm1JbnB1dC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIC8vINCj0L/RgNCw0LLQu9C10L3QuNC1INGB0L7RgdGC0L7Rj9C90LjQtdC8INC60L3QvtC/0LrQuFxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSA9ICgpID0+IHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLmRpc2FibGVTdWJtaXRCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyDQodC+0LHQuNGA0LDQtdC8INCy0YHQtSDRgdC70YPRiNCw0YLQtdC70LhcclxuICBfc2V0VmFsaWRhdGlvbkV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoZm9ybUlucHV0KSA9PiB7XHJcbiAgICAgIGZvcm1JbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoZm9ybUlucHV0KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH07XHJcbn07XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pbml0aWFsQXJyYXkgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XHJcbiAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtQXBwRW5kKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtUHJlcEVuZChlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIHRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZURlbGV0ZUNvbmZpcm0sIGhhbmRsZUNhcmRMaWtlQ2xpY2spIHtcclxuICAgIHRoaXMuX2RhdGEgPSBzZXR0aW5ncy5kYXRhO1xyXG4gICAgdGhpcy5fdXNlcklkID0gc2V0dGluZ3MudXNlcklkO1xyXG4gICAgdGhpcy5fb3duZXJJZCA9IHRoaXMuX2RhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5fb3BlbkNhcmQgPSBzZXR0aW5ncy5oYW5kbGVPcGVuSW1hZ2VQb3B1cDtcclxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ29uZmlybSA9IGhhbmRsZURlbGV0ZUNvbmZpcm07XHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkTGlrZUNsaWNrID0gaGFuZGxlQ2FyZExpa2VDbGljaztcclxuICB9XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIHJldHVybiBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2l0ZW0nKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgaXNMaWtlZCgpIHtcclxuICAgIGNvbnN0IGlzTGlrZWRCeVVzZXIgPSB0aGlzLl9kYXRhLmxpa2VzLmZpbmQodXNlciA9PiB1c2VyLl9pZCA9PT0gdGhpcy5fdXNlcklkKVxyXG5cclxuICAgIHJldHVybiBpc0xpa2VkQnlVc2VyXHJcbiAgfVxyXG5cclxuICBjb3VudExpa2VzKGFjdHVhbExpa2VzKSB7XHJcbiAgICB0aGlzLl9kYXRhLmxpa2VzID0gYWN0dWFsTGlrZXNcclxuICAgIHRoaXMuX2NhcmRMaWtlQ291bnRlci50ZXh0Q29udGVudCA9IHRoaXMuX2RhdGEubGlrZXMubGVuZ3RoXHJcblxyXG4gICAgaWYodGhpcy5pc0xpa2VkKCkpIHtcclxuICAgICAgdGhpcy5fZWxlbWVudExpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudHNfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fZWxlbWVudExpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZWxlbWVudHNfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZExvY2FsID0gKCkgPT4ge1xyXG4gICAgdGhpcy5fY2FyZC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2NhcmQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fZGVsZXRlLWJ0bicpO1xyXG4gICAgdGhpcy5fZWxlbWVudEltZyA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19pbWcnKTtcclxuICAgIHRoaXMuX2VsZW1lbnRMaWtlQnV0dG9uID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2xpa2UtYnV0dG9uJyk7XHJcbiAgICB0aGlzLl9jYXJkTGlrZUNvdW50ZXIgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fbGlrZS1jb3VudGVyJyk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2VsZW1lbnRJbWcuc3JjID0gdGhpcy5fZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fZWxlbWVudEltZy5hbHQgPSB0aGlzLl9kYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fY2FwdGlvbicpLnRleHRDb250ZW50ID0gdGhpcy5fZGF0YS5uYW1lO1xyXG5cclxuICAgIHRoaXMuY291bnRMaWtlcyh0aGlzLl9kYXRhLmxpa2VzKTtcclxuXHJcbiAgICBpZih0aGlzLl9vd25lcklkICE9PSB0aGlzLl91c2VySWQpe1xyXG4gICAgICB0aGlzLl9kZWxldGVCdXR0b24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZDtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnRMaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVDYXJkTGlrZUNsaWNrKHRoaXMuX2RhdGEuX2lkKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDb25maXJtKHRoaXMuX2RhdGEuX2lkKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19pbWctYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICBfaGFuZGxlSW1hZ2VDbGljaygpIHtcclxuICAgIHRoaXMuX29wZW5DYXJkKHRoaXMuX2RhdGEpO1xyXG4gIH1cclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgLy8g0KTRg9C90LrRhtC40Y8g0LfQsNC60YDRi9GC0LjRjyBwb3B1cCDQvdCwIGVzY1xyXG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyDQpNGD0L3QutGG0LjRjyDRg9GB0YLQsNC90L7QstC60Lgg0YHQu9GD0YjQsNGC0LXQu9GPINC30LDQutGA0YvRgtC40Y8gcG9wdXAg0L3QsCBlc2Mg0L3QsCDQstC10YHRjCDQtNC+0LrRg9C80LXQvdGCXHJcbiAgX3NldEtleUhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgLy8g0KHQvdGP0YLQuNC1INGB0LvRg9GI0LDRgtC10LvRjyDQt9Cw0LrRgNGL0YLQuNGPIHBvcHVwINC90LAgZXNjINC90LAg0LLQtdGB0Ywg0LTQvtC60YPQvNC10L3RglxyXG4gIF9yZW1vdmVLZXlIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIC8vINCX0LDQutGA0YvRgtC40LUgcG9wdXAg0L3QsCDQvtCy0LXRgNC70LXQtVxyXG4gIF9iaW5kUG9wdXBzT3ZlcmxheUNsaWNrSGFuZGxlcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIC8vINCX0LDQutGA0YvRgtC40LUgcG9wdXAg0L3QsCDQutGA0LXRgdGC0LjQutC1XHJcbiAgX2JpbmRQb3B1cHNDbG9zZUJ1dHRvbnNDbGlja0hhbmRsZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnY2xvc2UtYnRuJykpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH07XHJcbiAgICB9KVxyXG4gIH07XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fYmluZFBvcHVwc0Nsb3NlQnV0dG9uc0NsaWNrSGFuZGxlcnMoKTtcclxuICAgIHRoaXMuX2JpbmRQb3B1cHNPdmVybGF5Q2xpY2tIYW5kbGVycygpO1xyXG4gIH07XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIHRoaXMuX3NldEtleUhhbmRsZXIoKTtcclxuICB9O1xyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgdGhpcy5fcmVtb3ZlS2V5SGFuZGxlcigpO1xyXG4gIH07XHJcbn07IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2ltYWdlTGluayA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZmlndXJlLWltYWdlJyk7XHJcbiAgICB0aGlzLl9pbWFnZVRleHQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ZpZ3VyZS1jYXB0aW9uJyk7XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIG9wZW4oe25hbWUsIGxpbmt9KSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9pbWFnZUxpbmsuc3JjID0gbGluaztcclxuICAgIHRoaXMuX2ltYWdlTGluay5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5faW1hZ2VUZXh0LnRleHRDb250ZW50ID0gbmFtZTtcclxuICB9O1xyXG59O1xyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9fZm9ybS1pbnB1dCcpKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fc3VibWl0LWJ0bicpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uVGV4dCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXVxyXG4gICAgfSlcclxuICB9XHJcblxyXG5cclxuICBjaGFuZ2VIYW5kbGVGb3JtU3VibWl0KG5ld0hhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBuZXdIYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0KSB7XHJcbiAgICBpZihpc0xvYWRpbmcpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gbG9hZGluZ1RleHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b25UZXh0O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuXHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICB9XHJcblxyXG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7bmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3J9KSB7XHJcbiAgICB0aGlzLl9uYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9qb2JJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IG5hbWUgPSB0aGlzLl9uYW1lSW5wdXQudGV4dENvbnRlbnQ7XHJcbiAgICBjb25zdCBqb2IgPSB0aGlzLl9qb2JJbnB1dC50ZXh0Q29udGVudDtcclxuICAgIHJldHVybiB7bmFtZSwgam9ifTtcclxuICB9XHJcbiAgICBcclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCwgYXZhdGFyfSkge1xyXG4gICAgdGhpcy5fbmFtZUlucHV0LnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYklucHV0LnRleHRDb250ZW50ID0gYWJvdXQ7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xyXG4gIH1cclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHtiYXNlVXJsLCBoZWFkZXJzfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gICAgcmV0dXJuIHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwICR7cmVzLnN0YXR1c30gJHtyZXMuc3RhdHVzVGV4dH1gKVxyXG4gIH07XHJcblxyXG5cclxuICBfcmVxdWVzdCh1cmwsIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiBmZXRjaCh1cmwsIG9wdGlvbnMpLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcclxuICB9XHJcblxyXG4gIGdldFByb2ZpbGVJbmZvKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXHJcbiAgICAgIGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCxcclxuICAgICAge1xyXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgIH0pXHJcbiAgfTtcclxuICBcclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXHJcbiAgICAgIGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCxcclxuICAgICAge1xyXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgIH0pXHJcbiAgfTtcclxuXHJcbiAgZWRpdFByb2ZpbGUoe25hbWUsIGpvYn0pIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFxyXG4gICAgICBgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICBhYm91dDogam9iXHJcbiAgICAgICAgfSlcclxuICAgICAgfSlcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmQoe25hbWUsIGxpbmt9KSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChcclxuICAgICAgYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLFxyXG4gICAgICB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICBsaW5rXHJcbiAgICAgICAgfSlcclxuICAgICAgfSlcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmRPbmxpbmUoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChcclxuICAgICAgYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCxcclxuICAgICAge1xyXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICB9KVxyXG4gIH1cclxuXHJcbiAgYWRkTGlrZShjYXJkSWQpIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFxyXG4gICAgICBgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLFxyXG4gICAgICB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIH0pXHJcbiAgfVxyXG5cclxuICBkZWxldGVMaWtlKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXHJcbiAgICAgIGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgfSlcclxuICB9XHJcblxyXG4gIGNoYW5nZUF2YXRhcih7bGlua30pIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KFxyXG4gICAgICBgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLFxyXG4gICAgICB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBhdmF0YXI6IGxpbmtcclxuICAgICAgICB9KVxyXG4gICAgICB9KVxyXG4gIH07XHJcbiAgXHJcblxyXG59IiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIHByb2ZpbGVQb3B1cE9wZW5CdXR0b24sXHJcbiAgcG9wdXBQcm9maWxlU2VsZWN0b3IsXHJcbiAgcG9wdXBDYXJkU2VsZWN0b3IsXHJcbiAgY2FyZFBvcHVwT3BlbkJ1dHRvbixcclxuICBwcm9maWxlTmFtZVNlbGVjdG9yLFxyXG4gIHByb2ZpbGVKb2JTZWxlY3RvcixcclxuICBwcm9maWxlQXZhdGFyU2VsZWN0b3IsXHJcbiAgY2FyZHNDb250YWluZXIsXHJcbiAgdmFsaWRhdGlvbkNvbmZpZyxcclxuICBhdmF0YXJQb3B1cE9wZW5CdXR0b24sXHJcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcclxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XHJcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIG5hbWVTZWxlY3RvcjogcHJvZmlsZU5hbWVTZWxlY3RvcixcclxuICBqb2JTZWxlY3RvcjogcHJvZmlsZUpvYlNlbGVjdG9yLFxyXG4gIGF2YXRhclNlbGVjdG9yOiBwcm9maWxlQXZhdGFyU2VsZWN0b3JcclxufSk7XHJcblxyXG5sZXQgdXNlcklkID0gdW5kZWZpbmVkO1xyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fVxyXG5cclxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcclxuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKSlcclxuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUVsZW1lbnQsIGNvbmZpZylcclxuICAgIGNvbnN0IGZvcm1OYW1lID0gZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKCduYW1lJylcclxuXHJcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XHJcbiAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfSk7XHJcbn07XHJcblxyXG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25Db25maWcpO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNTUnLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246ICczNmI4Njk0Ny1lM2UzLTQwYzktOWY1OS01OTAwN2NiZTg4ZTcnLFxyXG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gIH1cclxufSk7XHJcblxyXG4gIFByb21pc2UuYWxsKFthcGkuZ2V0SW5pdGlhbENhcmRzKCksIGFwaS5nZXRQcm9maWxlSW5mbygpXSlcclxuICAgIC50aGVuKChbY2FyZHNBcnJheSwgdXNlckRhdGFdKSA9PiB7XHJcbiAgICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8odXNlckRhdGEpXHJcbiAgICAgIFxyXG4gICAgICBkZWZhdWx0Q2FyZExpc3QucmVuZGVySXRlbXMoY2FyZHNBcnJheSlcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgfSk7XHJcblxyXG5jb25zdCBoYW5kbGVDYXJkQ2xpY2sgPSAoaW1hZ2VEYXRhKSA9PiB7XHJcbiAgcG9wdXBJbWcub3BlbihpbWFnZURhdGEpO1xyXG59XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGNhcmREYXRhLCB0ZW1wbGF0ZSkgPT4ge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmREYXRhLFxyXG4gICAgdGVtcGxhdGUsXHJcbiAgICAoY2FyZElkKSA9PiB7XHJcbiAgICAgIHBvcHVwQ29uZmlybS5vcGVuKClcclxuICAgICAgcG9wdXBDb25maXJtLmNoYW5nZUhhbmRsZUZvcm1TdWJtaXQoKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwQ29uZmlybS5yZW5kZXJMb2FkaW5nKHRydWUsICfQo9C00LDQu9C10L3QuNC1Li4uJylcclxuICAgICAgICBhcGkuZGVsZXRlQ2FyZE9ubGluZShjYXJkSWQpXHJcbiAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNhcmQuZGVsZXRlQ2FyZExvY2FsKClcclxuICAgICAgICAgICAgcG9wdXBDb25maXJtLmNsb3NlKClcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICBwb3B1cENvbmZpcm0ucmVuZGVyTG9hZGluZyhmYWxzZSlcclxuICAgICAgICAgIH0pXHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgKGNhcmRJZCkgPT4ge1xyXG4gICAgICBpZiAoY2FyZC5pc0xpa2VkKCkpIHtcclxuICAgICAgICBhcGkuZGVsZXRlTGlrZShjYXJkSWQpXHJcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGNhcmQuY291bnRMaWtlcyhyZXMubGlrZXMpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcGkuYWRkTGlrZShjYXJkSWQpXHJcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGNhcmQuY291bnRMaWtlcyhyZXMubGlrZXMpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICApO1xyXG4gIHJldHVybiBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG59O1xyXG5cclxuY29uc3QgZGVmYXVsdENhcmRMaXN0ID0gbmV3IFNlY3Rpb24oe1xyXG4gIGl0ZW1zOiBbXSxcclxuICByZW5kZXJlcjogKGRhdGEpID0+IHtcclxuICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKFxyXG4gICAgICB7XHJcbiAgICAgICAgZGF0YSxcclxuICAgICAgICB1c2VySWQsXHJcbiAgICAgICAgaGFuZGxlT3BlbkltYWdlUG9wdXA6IGhhbmRsZUNhcmRDbGlja1xyXG4gICAgICB9LFxyXG4gICAgICAnLnRlbXBsYXRlJyk7XHJcbiAgICBkZWZhdWx0Q2FyZExpc3QuYWRkSXRlbUFwcEVuZChjYXJkKTtcclxuICB9XHJcbn0sXHJcbiAgY2FyZHNDb250YWluZXJcclxuKTtcclxuXHJcbmNvbnN0IHBvcHVwSW1nID0gbmV3IFBvcHVwV2l0aEltYWdlKCcjcG9wdXBJbWFnZScpO1xyXG5cclxuY29uc3QgcG9wdXBDb25maXJtID0gbmV3IFBvcHVwV2l0aEZvcm0oJyNwb3B1cERlbGV0ZUNvbmZpcm0nKTtcclxuXHJcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgJyNwb3B1cEF2YXRhcicsXHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZUZvcm1TdWJtaXQoZm9ybURhdGEpIHtcclxuICAgIHBvcHVwQXZhdGFyLnJlbmRlckxvYWRpbmcodHJ1ZSwgJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJylcclxuICAgIGFwaS5jaGFuZ2VBdmF0YXIoZm9ybURhdGEpXHJcbiAgICAgIC50aGVuKChhdmF0YXIpID0+IHtcclxuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhhdmF0YXIpO1xyXG4gICAgICAgIHBvcHVwQXZhdGFyLmNsb3NlKClcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwb3B1cEF2YXRhci5yZW5kZXJMb2FkaW5nKGZhbHNlKVxyXG4gICAgICB9KVxyXG4gIH1cclxuKTtcclxuXHJcbmNvbnN0IHBvcHVwSXRlbSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIHBvcHVwQ2FyZFNlbGVjdG9yLFxyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVGb3JtU3VibWl0KGZvcm1EYXRhKSB7XHJcbiAgICBwb3B1cEl0ZW0ucmVuZGVyTG9hZGluZyh0cnVlLCAn0KHQvtC30LTQsNC90LjQtS4uLicpXHJcbiAgICBhcGkuYWRkTmV3Q2FyZChmb3JtRGF0YSlcclxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgZGF0YSxcclxuICAgICAgICAgICAgdXNlcklkLFxyXG4gICAgICAgICAgICBoYW5kbGVPcGVuSW1hZ2VQb3B1cDogaGFuZGxlQ2FyZENsaWNrXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgJy50ZW1wbGF0ZScpXHJcbiAgICAgICAgZGVmYXVsdENhcmRMaXN0LmFkZEl0ZW1QcmVwRW5kKGNhcmQpXHJcbiAgICAgICAgcG9wdXBJdGVtLmNsb3NlKClcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwb3B1cEl0ZW0ucmVuZGVyTG9hZGluZyhmYWxzZSlcclxuICAgICAgfSlcclxuICB9XHJcbik7XHJcblxyXG5jb25zdCBwb3B1cFVzZXIgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBwb3B1cFByb2ZpbGVTZWxlY3RvcixcclxuXHJcbiAgZnVuY3Rpb24gaGFuZGxlRm9ybVN1Ym1pdChmb3JtRGF0YSkge1xyXG4gICAgcG9wdXBVc2VyLnJlbmRlckxvYWRpbmcodHJ1ZSwgJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJylcclxuICAgIGFwaS5lZGl0UHJvZmlsZShmb3JtRGF0YSlcclxuICAgICAgLnRoZW4oKHByb2ZpbGVJbmZvKSA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocHJvZmlsZUluZm8pXHJcbiAgICAgICAgcG9wdXBVc2VyLmNsb3NlKClcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICBwb3B1cFVzZXIucmVuZGVyTG9hZGluZyhmYWxzZSlcclxuICAgICAgfSlcclxuICB9XHJcbik7XHJcblxyXG4vLyDQntGC0LrRgNGL0YLQuNC1IHBvcHVwUHJvZmlsZSDRgSDQv9C+0LTRgdGC0LDQvdC+0LLQutC+0Lkg0LfQvdCw0YfQtdC90LjQuSwg0L3QtdCw0LrRgtC40LLQvdGL0Lwgc3VibWl0INC4INC+0YfQuNGB0YLQutC+0Lkg0L7RiNC40LHQvtC6XHJcbmNvbnN0IG9wZW5Qcm9maWxlUG9wdXAgPSAoKSA9PiB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ3Byb2ZpbGUnXS5jbGVhckVycm9ycygpXHJcbiAgZm9ybVZhbGlkYXRvcnNbJ3Byb2ZpbGUnXS5kaXNhYmxlU3VibWl0QnV0dG9uKClcclxuICBjb25zdCBpbnBpdFZhbHVlcyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcG9wdXBVc2VyLnNldElucHV0VmFsdWVzKGlucGl0VmFsdWVzKTtcclxuICBwb3B1cFVzZXIub3BlbigpO1xyXG59O1xyXG5cclxuY29uc3Qgb3BlblBvcHVwQ2FyZCA9ICgpID0+IHtcclxuICBmb3JtVmFsaWRhdG9yc1snY2FyZCddLmNsZWFyRXJyb3JzKClcclxuICBmb3JtVmFsaWRhdG9yc1snY2FyZCddLmRpc2FibGVTdWJtaXRCdXR0b24oKVxyXG4gIHBvcHVwSXRlbS5vcGVuKCk7XHJcbn07XHJcblxyXG5jb25zdCBvcGVuQXZhdGFyUG9wdXAgPSAoKSA9PiB7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ2F2YXRhciddLmNsZWFyRXJyb3JzKClcclxuICBmb3JtVmFsaWRhdG9yc1snYXZhdGFyJ10uZGlzYWJsZVN1Ym1pdEJ1dHRvbigpXHJcbiAgcG9wdXBBdmF0YXIub3BlbigpO1xyXG59XHJcblxyXG4vLyDQodC70YPRiNCw0YLQtdC70Ywg0L7RgtC60YDRi9GC0LjRjyBwb3B1cEFkZENhcmRcclxuY2FyZFBvcHVwT3BlbkJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Qb3B1cENhcmQpO1xyXG5cclxuLy8g0KHQu9GD0YjQsNGC0LXQu9GMINC+0YLQutGA0YvRgtC40Y8gcG9wdXBQcm9maWxlXHJcbnByb2ZpbGVQb3B1cE9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuUHJvZmlsZVBvcHVwKTtcclxuXHJcbi8vINCh0LvRg9GI0LDRgtC10LvRjCDQvtGC0LrRgNGL0YLQuNGPIHBvcHVwQXZhdGFyXHJcbmF2YXRhclBvcHVwT3BlbkJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5BdmF0YXJQb3B1cCk7XHJcblxyXG5wb3B1cEltZy5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wb3B1cFVzZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucG9wdXBJdGVtLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwQ29uZmlybS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wb3B1cEF2YXRhci5zZXRFdmVudExpc3RlbmVycygpOyJdLCJuYW1lcyI6WyJwcm9maWxlUG9wdXBPcGVuQnV0dG9uIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2FyZFBvcHVwT3BlbkJ1dHRvbiIsImF2YXRhclBvcHVwT3BlbkJ1dHRvbiIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsInZhbGlkYXRpb25Db25maWciLCJmb3JtSW5wdXQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJfZm9ybUVsZW1lbnQiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsIl9pbnB1dEVycm9yQ2xhc3MiLCJ0ZXh0Q29udGVudCIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9pbnB1dExpc3QiLCJmb3JFYWNoIiwiX2J1dHRvbkVsZW1lbnQiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiX3NldFZhbGlkYXRpb25FdmVudExpc3RlbmVycyIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZVN1Ym1pdEJ1dHRvbiIsInJlbW92ZUF0dHJpYnV0ZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidGhpcyIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2luaXRpYWxBcnJheSIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwiZWxlbWVudCIsImFwcGVuZCIsInByZXBlbmQiLCJDYXJkIiwic2V0dGluZ3MiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlRGVsZXRlQ29uZmlybSIsImhhbmRsZUNhcmRMaWtlQ2xpY2siLCJfY2FyZCIsIl9kYXRhIiwiZGF0YSIsIl91c2VySWQiLCJ1c2VySWQiLCJfb3duZXJJZCIsIm93bmVyIiwiX2lkIiwiX29wZW5DYXJkIiwiaGFuZGxlT3BlbkltYWdlUG9wdXAiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9oYW5kbGVEZWxldGVDb25maXJtIiwiX2hhbmRsZUNhcmRMaWtlQ2xpY2siLCJjb250ZW50IiwiY2xvbmVOb2RlIiwibGlrZXMiLCJmaW5kIiwidXNlciIsImFjdHVhbExpa2VzIiwiX2NhcmRMaWtlQ291bnRlciIsImxlbmd0aCIsImlzTGlrZWQiLCJfZWxlbWVudExpa2VCdXR0b24iLCJfZ2V0VGVtcGxhdGUiLCJfZGVsZXRlQnV0dG9uIiwiX2VsZW1lbnRJbWciLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJzcmMiLCJsaW5rIiwiYWx0IiwibmFtZSIsImNvdW50TGlrZXMiLCJzdHlsZSIsImRpc3BsYXkiLCJfaGFuZGxlSW1hZ2VDbGljayIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsImV2dCIsImtleSIsImNsb3NlIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9wb3B1cCIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJjb250YWlucyIsIl9iaW5kUG9wdXBzQ2xvc2VCdXR0b25zQ2xpY2tIYW5kbGVycyIsIl9iaW5kUG9wdXBzT3ZlcmxheUNsaWNrSGFuZGxlcnMiLCJfc2V0S2V5SGFuZGxlciIsIl9yZW1vdmVLZXlIYW5kbGVyIiwiUG9wdXBXaXRoSW1hZ2UiLCJfaW1hZ2VMaW5rIiwiX2ltYWdlVGV4dCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfc3VibWl0QnV0dG9uIiwiX3N1Ym1pdEJ1dHRvblRleHQiLCJfZm9ybVZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJuZXdIYW5kbGVGb3JtU3VibWl0IiwiaXNMb2FkaW5nIiwibG9hZGluZ1RleHQiLCJfZm9ybSIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfbmFtZUlucHV0IiwiX2pvYklucHV0IiwiX2F2YXRhciIsImpvYiIsImFib3V0IiwiYXZhdGFyIiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJ1cmwiLCJvcHRpb25zIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJfcmVxdWVzdCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiY2FyZElkIiwiY29uZmlnIiwidXNlckluZm8iLCJ1bmRlZmluZWQiLCJmb3JtVmFsaWRhdG9ycyIsImZvcm1TZWxlY3RvciIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwiZW5hYmxlVmFsaWRhdGlvbiIsImFwaSIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRQcm9maWxlSW5mbyIsImNhcmRzQXJyYXkiLCJ1c2VyRGF0YSIsInNldFVzZXJJbmZvIiwiZGVmYXVsdENhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVDYXJkQ2xpY2siLCJpbWFnZURhdGEiLCJwb3B1cEltZyIsIm9wZW4iLCJjcmVhdGVDYXJkIiwiY2FyZERhdGEiLCJ0ZW1wbGF0ZSIsImNhcmQiLCJwb3B1cENvbmZpcm0iLCJjaGFuZ2VIYW5kbGVGb3JtU3VibWl0IiwicmVuZGVyTG9hZGluZyIsImRlbGV0ZUNhcmRPbmxpbmUiLCJkZWxldGVDYXJkTG9jYWwiLCJmaW5hbGx5IiwiZGVsZXRlTGlrZSIsImFkZExpa2UiLCJnZW5lcmF0ZUNhcmQiLCJhZGRJdGVtQXBwRW5kIiwicG9wdXBBdmF0YXIiLCJmb3JtRGF0YSIsImNoYW5nZUF2YXRhciIsInBvcHVwSXRlbSIsImFkZE5ld0NhcmQiLCJhZGRJdGVtUHJlcEVuZCIsInBvcHVwVXNlciIsImVkaXRQcm9maWxlIiwicHJvZmlsZUluZm8iLCJjbGVhckVycm9ycyIsImlucGl0VmFsdWVzIiwiZ2V0VXNlckluZm8iLCJzZXRJbnB1dFZhbHVlcyIsInNldEV2ZW50TGlzdGVuZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==